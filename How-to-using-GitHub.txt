------------------------ Log ----------------------------
- Xem commit :					$ git log
						$ git log --oneline
- Xem commit trên remote			$ git log --oneline origin/nameBranch
- Xem graph commit branch :			$ git log --oneline --graph

------------------------ Add ----------------------------
- Add :
   + tất cả các file trừ xóa file :		$ git add .
   + các file untracked :			$ git add *
   + tên file muốn add :			$ git add name
   + mọi thứ có sự thay đổi :			$ git add -A
   + mọi thứ trừ file mới :			$ git add -u

- Đổi tên file : 				$ git mv css/oldName.js css/newName.js

- Bỏ add tất cả file đã add trên local :	$ git reset
						$ git reset -- .
- Bỏ add một file đã add trên local :		$ git reset -- nameFile
						$ git reset head -- nameFile
- Liệt kê các file untracked muốn xóa :		$ git clean -d -n	(b1)
- Xóa các file untracked :			$ git clean -d -f	(b2)
- Trở về trạng thái trước khi file bị sửa :	$ git restore -- .
						$ git restore -- nameFile
						$ git restore nameFile
---------------------- Commit -------------------------
- Commit					$ git commit -m"message name"
- Commit (Tùy chỉnh message)			$ git commit 
(nhấn i hoặc insert để bắt đầu viết message - Esc để leave ra ngoài - :wq hoặc :wq! để kết thúc)

----------------------- Merge --------------------------
- Gộp nhánh :					$ git merge nameBranch  	(Ko có commit "merge branch ...")
						$ git merge nameBranch --no-ff  (Có commit "merge branch ...")
- Tips : Đứng trên nhánh đang code có thể dùng ($ git pull origin develop) để merge mà ko cần sang develop để pull về trước

------------------------ Reset Commit ------------------
- Reset về commit idC1 :			$ git reset --soft idC1 	(đưa vào vùng staging)
 (xóa toàn bộ commit sau idC1 ở local)		$ git reset --hard idC1 	(xóa cứng luôn)
						$ git reset --soft head~1 	(Commit cuối)
						$ git reset --hard head~1 

- Xóa commit trên remote về bằng local :	$ git push origin nameBranch -f || --force	(xóa trên remote)

---------------------- Remote --------------------------
- Add remote :					$ git remote add origin https://github.com/thanhbinhgtv/Test.git
- Xóa remote ở local :				$ git remote rm nameRemote
- Xem link remote :				$ git remote -v
- Xóa tham chiếu origin/HEAD			$ git remote set-head origin -d

---------------------- Branch --------------------------
- Tạo Branch :					$ git branch nameBranch
- Xóa nhánh ở local :				$ git branch -d nameBranch
						$ git branch -D nameBranch
- Xóa nhánh ở remote :				$ git push --delete origin nameBranch
- Xem branch ở local :				$ git branch
- Xem các brach trên local và remote :		$ git branch -a

---------------------- Checkout --------------------------
- Tạo Branch và checkout sang branch đó :	$ git checkout -b nameBranch
- Checkout sang nhánh khác :			$ git checkout nameBranch
						$ git switch nameBranch
- Checkout từ nhánh hiện tại sang	
  nhánh khác tại commit a123:			$ git checkout -b fix-bug-branch a123

------------------------ cherry-pick ----------------------------
- Lấy commit có hash a123 từ bất kì		
  nhánh nào để áp dụng vào nhánh hiện tại :	$ git cherry-pick a123
- cherry-pick nhiều commit			$ git cherry-pick a123 a124 a125

- Giải quyết conflict: Trong quá trình cherry-pick, nếu có xung đột xảy ra Git sẽ yêu cầu bạn giải quyết các conflict.
  Sau khi giải quyết xong conflict, cần thực hiện lệnh:
  $ git add <file_with_conflict>
  $ git cherry-pick --continue

------------------------ Push ----------------------------
- Đồng bộ Local => Github  server :		$ git push
- Push code tất cả các nhánh lên remote :	$ git push origin --all
- Push một nhánh từ local lên remote :		$ git push origin nameBranch

------------------------ Fetch --------------------------
- Lấy code mới từ remote origin :		$ git fetch origin
(nhưng chưa merge vào code hiện tại)		$ git fetch origin namebranch

------------------------ Pull ---------------------------
- Đồng bộ Local <= Gibhub server :		$ git pull
($ git checkout nameBranch để lấy branch đấy từ remote)
($ git pull origin namebranch để cập nhật branch mới từ remote về local)

- Cập nhật code cho nhánh master local :	$ git pull origin master

--------------------- Clone về máy -----------------------
- Clone : 					$ git clone link
- Change name : 				$ git clone link NameChange

- Clone Project Private :			$ git clone https://username@github.com/username/repo_name
(username@github.com : là useName login git - đổi đuôi sau @ thành github.com)

--------------------Push lên GitHub-----------------------
- Copy Source code vào folder :			1- $ git init
						2- $ git add .
						3- $ git conmit
						4- $ git push "remote name" "branch name"

----------------------- Vim --------------------------
* Các bước để hoàn thành việc merge trong vim:
Nếu bạn đồng ý với thông điệp commit mặc định:
- Nhấn :wq và sau đó nhấn Enter để lưu và thoát.
Nếu bạn muốn chỉnh sửa thông điệp commit:
1. Di chuyển con trỏ tới dòng bạn muốn chỉnh sửa bằng các phím mũi tên.
2. Nhấn i để chuyển sang chế độ "Insert", cho phép bạn chỉnh sửa văn bản.
3. Sau khi chỉnh sửa xong, nhấn Esc để thoát khỏi chế độ "Insert".
4. Cuối cùng, gõ :wq và nhấn Enter để lưu và thoát.

---------------------- Info config ---------------------------
- Xem Info cấu hình : 			$ git config --list
- Xem user.name and user.email :	$ git config --global --list
- Sửa user.name and user.email	:	$ git config --global -e

- 					$ git config --global user.name "User Name"
- 					$ git config --global user.email "username@gmail.com"
(--global được sử dụng để áp dụng cho tất cả các projects. Nếu bạn ko sử dụng --global thì settings sẽ chỉ dùng cho riêng project đó.)

https://www.youtube.com/watch?v=gjQDyND-vN8&list=PLwJr0JSP7i8D041yrTcWB_qEdzijIUX-q

